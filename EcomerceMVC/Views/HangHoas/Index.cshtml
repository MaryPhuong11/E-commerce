@model EcomerceMVC.ViewModels.ProductViewModel

@{
    ViewData["Title"] = "Danh sách sản phẩm";
    Layout = "_LayoutAdmin";
}

<style>
  
    .card {
        border: none;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        border-radius: 10px;
        overflow: hidden;
    }

    .card-header {
        background-color: #007bff;
        color: white;
        border-radius: 10px 10px 0 0;
        padding: 15px;
    }

    .form-control:focus {
        border-color: #007bff;
        box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
    }

    .btn-primary {
        background-color: #007bff;
        border: none;
        transition: background-color 0.3s;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }

    .table {
        background-color: white;
        border-radius: 8px;
        overflow: hidden;
    }

        .table th {
            background-color: #f8f9fa;
            font-weight: 600;
            color: #333;
        }

        .table td {
            vertical-align: middle;
        }

        .table tr:hover {
            background-color: #f1f3f5;
        }

    .product-image {
        max-width: 100px;
        max-height: 100px;
        object-fit: cover;
        border-radius: 5px;
    }

    .action-links a {
        margin-right: 10px;
        text-decoration: none;
        color: #007bff;
        transition: color 0.3s;
    }

       

    .text-danger {
        font-size: 0.9rem;
        font-weight: 500;
    }

    .search-form {
        display: flex;
        gap: 10px;
        align-items: center;
        flex-wrap: wrap;
    }

    .filter-spinner {
        display: none;
        margin-left: 10px;
        color: #007bff;
    }

    .delete-spinner {
        display: none;
        margin-left: 5px;
    }

    .delete-btn {
        cursor: pointer;
    }
</style>

<div >
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-12">
                <div class="card mb-4">
                    <div class="card-header">
                        <h3 class="mb-0">Danh sách sản phẩm</h3>
                    </div>
                    <div class="card-body">
                        <!-- Form tìm kiếm & lọc -->
                        <form method="get" class="search-form mb-4" id="filterForm">
                            <input type="text" name="searchTerm" value="@Model.SearchTerm" placeholder="Tìm kiếm sản phẩm..." class="form-control" style="max-width: 300px;" />
                            <select name="categoryId" class="form-control" style="max-width: 200px;" onchange="document.getElementById('filterForm').submit();">
                                <option value="">Tất cả danh mục</option>
                                @foreach (var category in Model.Categories)
                                {
                                    <option value="@category.Maloai" selected="@(category.Maloai == Model.SelectedCategoryId ? "selected" : null)">
                                        @category.TenLoai
                                    </option>
                                }
                            </select>
                            <button type="submit" class="btn btn-primary">Lọc</button>
                            <span class="filter-spinner">Đang tải...</span>
                        </form>

                        <!-- Bảng hiển thị sản phẩm -->
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Tên sản phẩm</th>
                                        <th>Mô tả</th>
                                        <th>Hình ảnh</th>
                                        <th>Đơn giá</th>
                                        <th>Số lượng</th>
                                        <th>Danh mục</th>
                                        <th>Thao tác</th>
                                    </tr>
                                </thead>
                                <tbody id="productTableBody">
                                    @if (Model.Products.Any())
                                    {
                                        @foreach (var item in Model.Products)
                                        {
                                            <tr id="product-@item.MaHh">
                                                <td>@item.TenHh</td>
                                                <td>
                                                    @(item.MoTa?.Length > 50 ? item.MoTa.Substring(0, 50) + "..." : item.MoTa)
                                                </td>
                                                <td>
                                                    @if (!string.IsNullOrEmpty(item.Hinh))
                                                    {
                                                        <img src="~/images/@item.Hinh" alt="@item.TenHh" class="product-image" />
                                                    }
                                                    else
                                                    {
                                                        <span>Không có ảnh</span>
                                                    }
                                                </td>
                                                <td>@item.DonGia.ToString("N0") VNĐ</td>
                                                <td>@item.SoLuong</td>
                                                <td>@(item.MaLoaiNavigation?.TenLoai ?? "Không có")</td>
                                                <td class="action-links">
                                                    <a asp-action="Edit" asp-route-id="@item.MaHh" class="btn btn-sm btn-success">Sửa</a>

                                                    <button type="button"
                                                            class="btn btn-sm btn-danger delete-btn"
                                                            data-id="@item.MaHh"
                                                            data-name="@item.TenHh"
                                                            data-bs-toggle="modal"
                                                            data-bs-target="#deleteModal">
                                                        Xóa
                                                    </button>
                                                </td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="7" class="text-center">Không tìm thấy sản phẩm nào.</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Nút thêm sản phẩm -->
                        <div class="mt-4">
                            <a asp-action="Create" class="btn btn-primary">Thêm sản phẩm mới</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Bootstrap Modal cho xác nhận xóa -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Xác nhận xóa sản phẩm</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Bạn có chắc muốn xóa sản phẩm "<span id="productName"></span>" không?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">
                    Xóa
                    <span class="spinner-border spinner-border-sm delete-spinner" role="status" aria-hidden="true"></span>
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Hidden form for CSRF token -->
<form id="antiForgeryForm" style="display: none;">
    @Html.AntiForgeryToken()
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Hiển thị spinner khi gửi form lọc
        document.getElementById('filterForm').addEventListener('submit', function () {
            document.querySelector('.filter-spinner').style.display = 'inline-block';
        });

        // Xử lý xóa sản phẩm
        document.querySelectorAll('.delete-btn').forEach(button => {
            button.addEventListener('click', function () {
                const productId = this.getAttribute('data-id');
                const productName = this.getAttribute('data-name');
                document.getElementById('productName').textContent = productName;
                document.getElementById('confirmDeleteBtn').setAttribute('data-id', productId);
            });
        });

        document.getElementById('confirmDeleteBtn').addEventListener('click', function () {
            const productId = this.getAttribute('data-id');
            const deleteBtn = this;
            const spinner = deleteBtn.querySelector('.delete-spinner');
            const token = document.querySelector('#antiForgeryForm input[name="__RequestVerificationToken"]').value;

            // Hiển thị spinner và vô hiệu hóa nút
            spinner.style.display = 'inline-block';
            deleteBtn.disabled = true;

            // Gửi POST yêu cầu xóa
            fetch(`/HangHoas/Delete/${productId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': token
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Xóa hàng khỏi bảng
                        const row = document.getElementById('product-' + productId);
                        if (row) {
                            row.remove();
                        }
                        // Đóng modal
                        const modal = bootstrap.Modal.getInstance(document.getElementById('deleteModal'));
                        modal.hide();
                        // Kiểm tra nếu bảng rỗng
                        if (!document.querySelector('#productTableBody tr')) {
                            document.getElementById('productTableBody').innerHTML = '<tr><td colspan="7" class="text-center">Không tìm thấy sản phẩm nào.</td></tr>';
                        }
                    } else {
                        alert(data.message || 'Xóa không thành công.');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('Lỗi khi gửi yêu cầu xóa.');
                })
                .finally(() => {
                    // Ẩn spinner và kích hoạt lại nút
                    spinner.style.display = 'none';
                    deleteBtn.disabled = false;
                });
        });
    </script>
}